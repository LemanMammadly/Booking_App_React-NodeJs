{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Desktop/Bookingapp/client/src/components/reserve/Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { SearchContext } from \"../../context/SearchContext\";\nimport useFetch from \"../../hooks/useFetch\";\nimport \"./Reserve.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const {\n    data\n  } = useFetch(`/hotels/room/${hotelId}`);\n  const {\n    dates\n  } = useContext(SearchContext);\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    let dates = [];\n\n    while (date <= end) {\n      dates.push(new Date(date).getTime());\n      date.setDate(date.getDate() + 1);\n    }\n\n    return dates;\n  };\n\n  const allDates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n\n  const isAvailable = roomNumber => {\n    const isFound = roomNumber.unavailableDates.some();\n  };\n\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item => item !== value));\n  };\n\n  const handleClick = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleXmark,\n        className: \"rClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select your rooms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rItemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rTitle\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rDesc\",\n            children: item.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rMax\",\n            children: [\"Max people: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item.maxPeople\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rPrice\",\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), item.roomNumbers.map(roomNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: roomNumber.number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: roomNumber._id,\n            onChange: handleSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"rButton\",\n        children: \"Reserv Now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"Lx/PdoUNyWTQYAc/B6aZSDu1YCA=\", false, function () {\n  return [useFetch];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["/Users/imac/Desktop/Bookingapp/client/src/components/reserve/Reserve.jsx"],"names":["faCircleXmark","FontAwesomeIcon","React","useContext","useState","SearchContext","useFetch","Reserve","setOpen","hotelId","selectedRooms","setSelectedRooms","data","dates","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","push","setDate","getDate","allDates","isAvailable","roomNumber","isFound","unavailableDates","some","handleSelect","e","checked","target","value","filter","item","handleClick","map","title","desc","maxPeople","price","roomNumbers","number","_id"],"mappings":"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","sourcesContent":["import { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { SearchContext } from \"../../context/SearchContext\";\nimport useFetch from \"../../hooks/useFetch\";\nimport \"./Reserve.css\";\n\nconst Reserve = ({ setOpen, hotelId }) => {\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const { data } = useFetch(`/hotels/room/${hotelId}`);\n  const {dates}=useContext(SearchContext)\n\n  const getDatesInRange=(startDate,endDate)=>{\n    const start=new Date(startDate);\n    const end=new Date(endDate);\n    const date= new Date(start.getTime());\n\n    let dates=[]\n\n    while(date <= end){\n      dates.push(new Date(date).getTime());\n      date.setDate(date.getDate()+1)\n    }\n\n    return dates;\n  };\n\n  const allDates=getDatesInRange(dates[0].startDate,dates[0].endDate);\n\n  const isAvailable=(roomNumber)=>{\n    const isFound=roomNumber.unavailableDates.some()\n  }\n\n  const handleSelect = (e) => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRooms(\n      checked\n        ? [...selectedRooms, value]\n        : selectedRooms.filter((item) => item !== value)\n    );\n  };\n\n  const handleClick=()=>{\n\n  }\n\n  return (\n    <div className=\"reserve\">\n      <div className=\"rContainer\">\n        <FontAwesomeIcon\n          icon={faCircleXmark}\n          className=\"rClose\"\n          onClick={() => setOpen(false)}\n        />\n        <span>Select your rooms:</span>\n        {data.map((item) => (\n          <div className=\"rItem\">\n            <div className=\"rItemInfo\">\n              <div className=\"rTitle\">{item.title}</div>\n              <div className=\"rDesc\">{item.desc}</div>\n              <div className=\"rMax\">\n                Max people: <b>{item.maxPeople}</b>\n              </div>\n              <div className=\"rPrice\">{item.price}</div>\n            </div>\n            {item.roomNumbers.map((roomNumber) => (\n              <div className=\"room\">\n                <label>{roomNumber.number}</label>\n                <input\n                  type=\"checkbox\"\n                  value={roomNumber._id}\n                  onChange={handleSelect}\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n        <button onClick={handleClick} className=\"rButton\">\n          Reserv Now!\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Reserve;\n"]},"metadata":{},"sourceType":"module"}